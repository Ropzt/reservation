ter_calendar <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export-ter-gtfs-last/calendar.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
ter_stops <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export-ter-gtfs-last/stops.txt", header=TRUE, sep=",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
ter_stoptime <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export-ter-gtfs-last/stop_times.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
ter_trips <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export-ter-gtfs-last/trips.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
## Recuperer uniquement les colonnes que l'on souhaite
ter_stops <- ter_stops %>% select(c('stop_id', 'stop_name', 'parent_station'))
tgv_stops <- tgv_stops %>% select(c('stop_id', 'stop_name', 'parent_station'))
ter_stoptime <- ter_stoptime %>% select(c('trip_id','arrival_time','departure_time','stop_id','stop_sequence'))
tgv_stoptime <- tgv_stoptime %>% select(c('trip_id','arrival_time','departure_time','stop_id','stop_sequence'))
tgv_trips <- tgv_trips %>% select(c('trip_id','service_id','trip_headsign'))
ter_trips <- ter_trips %>% select(c('trip_id','service_id','trip_headsign'))
## Assembler les tables
ter_stops_time <- left_join(ter_stoptime,ter_stops, by="stop_id")
tgv_stops_time <- left_join(tgv_stoptime,tgv_stops, by="stop_id")
ter_stops_time_trips <- left_join(ter_stops_time,ter_trips, by="trip_id")
tgv_stops_time_trips <- left_join(tgv_stops_time,tgv_trips, by="trip_id")
ter_stops_time_trips_calend <- left_join(ter_stops_time_trips, ter_calendar, by="service_id")
tgv_stops_time_trips_calend <- left_join(tgv_stops_time_trips, tgv_calendar, by="service_id")
## Handling NA services
# Recuperer les service_id defectueux et recuperer ceux qui ont une correspondance dans TER ou TGV
service_id_na <- full_table %>% filter(is.na(monday)|is.na(tuesday)|is.na(wednesday)|is.na(thursday)|is.na(friday)|is.na(saturday)|is.na(sunday)) %>% distinct(service_id)
service_id_na_ter <- ter_stops_time_trips_calend %>% filter(is.na(monday)|is.na(tuesday)|is.na(wednesday)|is.na(thursday)|is.na(friday)|is.na(saturday)|is.na(sunday)) %>% distinct(service_id)
service_id_na_tgv <- tgv_stops_time_trips_calend %>% filter(is.na(monday)|is.na(tuesday)|is.na(wednesday)|is.na(thursday)|is.na(friday)|is.na(saturday)|is.na(sunday)) %>% distinct(service_id)
tgv_calend_na <- tgv_calendar %>% filter(service_id %in% service_id_na_ter$service_id)
ter_calend_na <- ter_calendar %>% filter(service_id %in% service_id_na_tgv$service_id)
# Reimplanter ceux qui ont une correspondance
ter_stops_time_trips_calend2 <- left_join(ter_stops_time_trips_calend, tgv_calend_na, by="service_id")
ter_stops_time_trips_calend2 <- ter_stops_time_trips_calend2 %>% mutate(true_monday = case_when(monday.x == 1 ~ 1,  is.na(monday.x)  ~ if_else(is.na(monday.y), NA_real_, if_else(monday.y==1, 1, 0)), monday.x == 0 ~ 0    ),
true_tuesday = case_when(tuesday.x == 1 ~ 1,  is.na(tuesday.x)  ~ if_else(is.na(tuesday.y), NA_real_, if_else(tuesday.y==1, 1, 0)), tuesday.x == 0 ~ 0    ),
true_wednesday = case_when(wednesday.x == 1 ~ 1,  is.na(wednesday.x)  ~ if_else(is.na(wednesday.y), NA_real_, if_else(wednesday.y==1, 1, 0)), wednesday.x == 0 ~ 0    ),
true_thursday = case_when(thursday.x == 1 ~ 1,  is.na(thursday.x)  ~ if_else(is.na(thursday.y), NA_real_, if_else(thursday.y==1, 1, 0)), thursday.x == 0 ~ 0    ),
true_friday = case_when(friday.x == 1 ~ 1,  is.na(friday.x)  ~ if_else(is.na(friday.y), NA_real_, if_else(friday.y==1, 1, 0)), friday.x == 0 ~ 0    ),
true_saturday = case_when(saturday.x == 1 ~ 1,  is.na(saturday.x)  ~ if_else(is.na(saturday.y), NA_real_, if_else(saturday.y==1, 1, 0)), saturday.x == 0 ~ 0    ),
true_sunday = case_when(sunday.x == 1 ~ 1,  is.na(sunday.x)  ~ if_else(is.na(sunday.y), NA_real_, if_else(sunday.y==1, 1, 0)), sunday.x == 0 ~ 0    ))
still_na_ter <- ter_stops_time_trips_calend2 %>% filter(is.na(true_monday)) %>% distinct(service_id)
tgv_stops_time_trips_calend2 <- left_join(tgv_stops_time_trips_calend, ter_calend_na, by="service_id")
tgv_stops_time_trips_calend2 <- tgv_stops_time_trips_calend2 %>% mutate(true_monday = case_when(monday.x == 1 ~ 1,  is.na(monday.x)  ~ if_else(is.na(monday.y), NA_real_, if_else(monday.y==1, 1, 0)), monday.x == 0 ~ 0    ),
true_tuesday = case_when(tuesday.x == 1 ~ 1,  is.na(tuesday.x)  ~ if_else(is.na(tuesday.y), NA_real_, if_else(tuesday.y==1, 1, 0)), tuesday.x == 0 ~ 0    ),
true_wednesday = case_when(wednesday.x == 1 ~ 1,  is.na(wednesday.x)  ~ if_else(is.na(wednesday.y), NA_real_, if_else(wednesday.y==1, 1, 0)), wednesday.x == 0 ~ 0    ),
true_thursday = case_when(thursday.x == 1 ~ 1,  is.na(thursday.x)  ~ if_else(is.na(thursday.y), NA_real_, if_else(thursday.y==1, 1, 0)), thursday.x == 0 ~ 0    ),
true_friday = case_when(friday.x == 1 ~ 1,  is.na(friday.x)  ~ if_else(is.na(friday.y), NA_real_, if_else(friday.y==1, 1, 0)), friday.x == 0 ~ 0    ),
true_saturday = case_when(saturday.x == 1 ~ 1,  is.na(saturday.x)  ~ if_else(is.na(saturday.y), NA_real_, if_else(saturday.y==1, 1, 0)), saturday.x == 0 ~ 0    ),
true_sunday = case_when(sunday.x == 1 ~ 1,  is.na(sunday.x)  ~ if_else(is.na(sunday.y), NA_real_, if_else(sunday.y==1, 1, 0)), sunday.x == 0 ~ 0    ))
still_na_tgv <- tgv_stops_time_trips_calend2 %>% filter(is.na(true_monday)) %>% distinct(service_id)
still_na_tgv_nodouble <- still_na_tgv %>% filter(!(service_id %in% still_na_ter$service_id))
still_na <- bind_rows(still_na_ter,still_na_tgv_nodouble)
# Supprimer ceux qui n'ont trouvÃ© aucune correspondance
ter_stops_time_trips_calend2 <- ter_stops_time_trips_calend2 %>% mutate(is_na = if_else(is.na(true_monday), TRUE, FALSE))
ter_stops_time_trips_calend2 <- ter_stops_time_trips_calend2 %>% filter(is_na == FALSE)
tgv_stops_time_trips_calend2 <- tgv_stops_time_trips_calend2 %>% mutate(is_na = if_else(is.na(true_monday), TRUE, FALSE))
tgv_stops_time_trips_calend2 <- tgv_stops_time_trips_calend2 %>% filter(is_na == FALSE)
## End of NA handling
## Creation de la table finale
full_table <- bind_rows(ter_stops_time_trips_calend2, tgv_stops_time_trips_calend2)
## Ajout de la variable type
full_table <- full_table %>% mutate(type = case_when( str_detect(full_table$stop_id, pattern="Car TER-") ~ "Car",
str_detect(full_table$stop_id, pattern="Tramtrain-") ~ "Tram",
str_detect(full_table$stop_id, pattern="Train TER-") ~ "TER",
str_detect(full_table$stop_id, pattern="Navette-") ~ "Navette",
str_detect(full_table$stop_id, pattern="TGV-") ~ "TGV",
str_detect(full_table$stop_id, pattern="TGV INOUI-") ~ "INOUI",
str_detect(full_table$stop_id, pattern="OUIGO-") ~ "OUIGO"))
## Suppression de l'excedant "Gare de " dans stop_name
full_table$stop_name <- str_remove_all(full_table$stop_name, pattern = "Gare de ")
## Ajout de la variable capacite_max
full_table <- full_table %>% mutate(capacite_max =case_when( str_detect(full_table$type, pattern="Car") ~ 63,
str_detect(full_table$type, pattern="Tram") ~ 200,
str_detect(full_table$type, pattern="TER") ~ 300,
str_detect(full_table$type, pattern="Navette") ~ 100,
str_detect(full_table$type, pattern="TGV") ~ 1400,
str_detect(full_table$type, pattern="INOUI") ~ 1400,
str_detect(full_table$type, pattern="OUIGO") ~ 1400))
## Suppression des lignes n'ayant pas de nom de gare
full_table <- full_table %>% filter(stop_name != "")
## Transformation de trip_id en new_id
trip_id_full <- full_table %>% distinct(trip_id)
trip_id_full <- trip_id_full %>% mutate(new_id= 0)
i<-0
for(i in sequence(31321)){
trip_id_full[i,]$new_id <- i
}
full_table <- left_join(full_table, trip_id_full, by="trip_id")
## On garde uniquement les variables que l'on souhaites
full_table <- full_table %>% select(c('new_id','arrival_time', 'departure_time', 'stop_sequence','trip_headsign','true_monday','true_tuesday','true_wednesday','true_thursday','true_friday','true_saturday','true_sunday','capacite_max','type','stop_name'))
## Suppression de l'excedant ":" et ":00" dans les horaires
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":00$")
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":00$")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":")
## Suppression des caractÃ¨res spÃ©ciaux
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[éèêë]", "e")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÊËÈÉ]", "E")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[àâäáã]", "a")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÄÂÀÁÃ]", "A")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÏÎÌÍ]", "I")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ôöòó]", "o")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÖÔÒÓ]", "O")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ùûüú]", "u")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÜÛÚÙ]", "U")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÿý]", "y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "ç", "c")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ý", "Y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ç", "C")
g3 <- full_table%>%distinct(stop_name)
g3<-str_to_upper(g3)
View(tgv_stops_time_trips_calend)
g3 <- full_table%>%distinct(stop_name)
g3<-str_to_upper(g3$stop_name)
g3 <- full_table%>%distinct(stop_name)
g3$stop_name<-str_to_upper(g3$stop_name)
g1$dep <- str_replace_all(g1$dep, pattern = " ", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "-", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "[:digit:]", "_")
g2$arr <- str_replace_all(g2$arr, pattern = " ", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "-", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "[:digit:]", "_")
g3$stop_name  <- str_replace_all(g3$stop_name , pattern = " ", "_")
g3$stop_name  <- str_replace_all(g3$stop_name , pattern = "-", "_")
g3$stop_name  <- str_replace_all(g3$stop_name , pattern = "[:digit:]", "_")
g1$dep <- str_remove_all(g1$dep, pattern = "_")
g2$arr <- str_remove_all(g2$arr, pattern = "_")
g3$stop_name  <- str_remove_all(g3$stop_name , pattern = "_")
g1%>% filter(g1$dep %in% g3$stop_name)
g2%>% filter(g2$arr %in% g3$stop_name)
g3%>% filter((g3$stop_name %in% g1$dep) | (g3$stop_name %in% g2$arr))
tarif_ter <- read.csv("C:/Users/pariz/Documents/Github/reservation/Tarifs/tarifs-ter-par-od.csv", header=TRUE,sep=";", fileEncoding = "UTF-8")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[éèêë]", "e")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ÊËÈÉ]", "E")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[àâäáã]", "a")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ÄÂÀÁÃ]", "A")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ÏÎÌÍ]", "I")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ôöòó]", "o")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ÖÔÒÓ]", "O")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ùûüú]", "u")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ÜÛÚÙ]", "U")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[ÿý]", "y")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "ç", "c")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "Ý", "Y")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "Ç", "C")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[éèêë]", "e")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ÊËÈÉ]", "E")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[àâäáã]", "a")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ÄÂÀÁÃ]", "A")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ÏÎÌÍ]", "I")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ôöòó]", "o")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ÖÔÒÓ]", "O")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ùûüú]", "u")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ÜÛÚÙ]", "U")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[ÿý]", "y")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "ç", "c")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "Ý", "Y")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "Ç", "C")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = " ", "_")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "-", "_")
tarif_ter$Origine <- str_replace_all(tarif_ter$Origine, pattern = "[:digit:]", "_")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = " ", "_")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "-", "_")
tarif_ter$Destination <- str_replace_all(tarif_ter$Destination, pattern = "[:digit:]", "_")
tarif_ter$Origine <- str_remove_all(tarif_ter$Origine, pattern = "_")
tarif_ter$Destination <- str_remove_all(tarif_ter$Destination, pattern = "_")
ter_d1 <- tarif_ter%>%distinct(Origine)
ter_d2 <- tarif_ter%>%distinct(Destination)
g3%>% filter((g3$stop_name %in% ter_d1$Origine) | (g3$stop_name %in% ter_d2$Destination))
g3%>% filter((g3$stop_name %in% ter_d1$Origine) | (g3$stop_name %in% ter_d2$Destination) | (g3$stop_name %in% g1$dep) | (g3$stop_name %in% g2$arr))
g3%>% filter((g3$stop_name %in% ter_d1$Origine) | (g3$stop_name %in% ter_d2$Destination))
tgv_calendar <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/calendar.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_stops <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/stops.txt", header=TRUE, sep=",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
tgv_stoptime <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/stop_times.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_trips <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/trips.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_stops <- tgv_stops %>% select(c('stop_id', 'stop_name', 'parent_station'))
tgv_stoptime <- tgv_stoptime %>% select(c('trip_id','arrival_time','departure_time','stop_id','stop_sequence'))
tgv_trips <- tgv_trips %>% select(c('trip_id','service_id','trip_headsign'))
tgv_stops_time <- left_join(tgv_stoptime,tgv_stops, by="stop_id")
tgv_stops_time_trips <- left_join(tgv_stops_time,tgv_trips, by="trip_id")
tgv_stops_time_trips_calend <- left_join(tgv_stops_time_trips, tgv_calendar, by="service_id")
full_table <- tgv_stops_time_trips_calend %>% filter(!is.na(monday))
full_table$stop_name <- str_remove_all(full_table$stop_name, pattern = "Gare de ")
full_table <- full_table %>% filter(stop_name != "")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[éèêë]", "e")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÊËÈÉ]", "E")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[àâäáã]", "a")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÄÂÀÁÃ]", "A")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÏÎÌÍ]", "I")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ôöòó]", "o")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÖÔÒÓ]", "O")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ùûüú]", "u")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÜÛÚÙ]", "U")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÿý]", "y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "ç", "c")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ý", "Y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ç", "C")
tarif_tgv <- read.csv("C:/Users/pariz/Documents/Github/reservation/Tarifs/tarifs-tgv-par-od.csv", header=TRUE,sep=";", fileEncoding = "UTF-8")
library(stringr)
library(dplyr)
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "BELFORT-MONTBELIARD", "BELFORT45MONTBELIARD")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "BESANCON FRANCHE-COMTE", "BESANCON FRANCHE45COMTE")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "AIX-LES-BAINS - LE REVARD", "AIX45LES45BAINS 45 LE REVARD")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "Chalon-sur-Saône", "Chalon45sur45Saône")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "la-teste", "la45teste")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "LILLE EUROPE-147322", "LILLE EUROPE")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "ST AVRE - LA CHAMBRE", "ST AVRE 45 LA CHAMBRE")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "VITRY-LE-FRANÇOIS", "VITRY45LE45FRANÇOIS")
tarif_nolaval <- tarif_tgv%>%filter(str_count(tarif_tgv$OD, pattern = "-")==1)
tarif_laval <- tarif_tgv%>%filter(str_count(tarif_tgv$OD, pattern = "-")>1)
tarif_laval$OD <- str_remove(tarif_laval$OD, pattern="^[^-]{1,}")
tarif_laval$OD <- str_remove(tarif_laval$OD, pattern="^-{1}")
tarif_tgv2<-bind_rows(tarif_nolaval,tarif_laval)
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[éèêë]", "e")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÊËÈÉ]", "E")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[àâäáã]", "a")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÄÂÀÁÃ]", "A")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÏÎÌÍ]", "I")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ôöòó]", "o")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÖÔÒÓ]", "O")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ùûüú]", "u")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÜÛÚÙ]", "U")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÿý]", "y")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "ç", "c")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "Ý", "Y")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "Ç", "C")
tarif_tgv2 <- tarif_tgv2%>%mutate(list = str_split(tarif_tgv2$OD, pattern="-"))
tarif_tgv2 <- tarif_tgv2%>%mutate(dep = lapply(tarif_tgv2$list, function(x) x[1]))
tarif_tgv2 <- tarif_tgv2%>%mutate(arr = lapply(tarif_tgv2$list, function(x) x[2]))
tarif_tgv2$dep<-unlist(tarif_tgv2$dep)
tarif_tgv2$arr<-unlist(tarif_tgv2$arr)
tarif_tgv2$dep<-str_replace_all(tarif_tgv2$dep, pattern="45", "-")
tarif_tgv2$arr<-str_replace_all(tarif_tgv2$arr, pattern="45", "-")
tarif_tgv2$dep<-str_trim(tarif_tgv2$dep)
tarif_tgv2$arr<-str_trim(tarif_tgv2$arr)
g1 <- tarif_tgv2$dep
g2 <- tarif_tgv2$arr
View(tgv_calendar)
full_table$stop_name  <- str_replace_all(full_table$stop_name , pattern = " ", "_")
full_table$stop_name  <- str_replace_all(full_table$stop_name , pattern = "-", "_")
full_table$stop_name  <- str_replace_all(full_table$stop_name , pattern = "[:digit:]", "_")
full_table$stop_name  <- str_remove_all(full_table$stop_name , pattern = "_")
g1$dep <- str_replace_all(g1$dep, pattern = " ", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "-", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "[:digit:]", "_")
g2$arr <- str_replace_all(g2$arr, pattern = " ", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "-", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "[:digit:]", "_")
g1 <- tarif_tgv2%>%distinct(dep)
g2 <- tarif_tgv2%>%distinct(arr)
g1$dep <- str_replace_all(g1$dep, pattern = " ", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "-", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "[:digit:]", "_")
g2$arr <- str_replace_all(g2$arr, pattern = " ", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "-", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "[:digit:]", "_")
g1$dep <- str_remove_all(g1$dep, pattern = "_")
g2$arr <- str_remove_all(g2$arr, pattern = "_")
full_table%>%filter((stop_name %in% g1$dep)|(stop_name %in% g2$arr))
g1 <- tarif_tgv2%>%distinct(dep)
g2 <- tarif_tgv2%>%distinct(arr)
g1$dep<-str_to_upper(g1$dep)
g2$arr<-str_to_upper(g2$arr)
g1$dep <- str_replace_all(g1$dep, pattern = " ", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "-", "_")
g1$dep <- str_replace_all(g1$dep, pattern = "[:digit:]", "_")
g2$arr <- str_replace_all(g2$arr, pattern = " ", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "-", "_")
g2$arr <- str_replace_all(g2$arr, pattern = "[:digit:]", "_")
g1$dep <- str_remove_all(g1$dep, pattern = "_")
g2$arr <- str_remove_all(g2$arr, pattern = "_")
full_table$stop_name<-str_to_upper(full_table$stop_name)
full_table%>%filter((stop_name %in% g1$dep)|(stop_name %in% g2$arr))
View(full_table)
full_table %>% distinct(trip_id)
full_table%>%filter((stop_name %in% g1$dep)|(stop_name %in% g2$arr)) %>% distinct(trip_id)
full_join<-full_table
full_table <- full_table%>% mutate(stop_proche = stop_sequence+1)
full_join <- full_join%>% mutate(stop_proche = stop_sequence)
full_join <- left_join(full_join,full_table, by="stop_proche")
tarif_tgv <- read.csv("C:/Users/pariz/Documents/Github/reservation/Tarifs/tarifs-tgv-par-od.csv", header=TRUE,sep=";", fileEncoding = "UTF-8")
library(stringr)
library(dplyr)
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "BELFORT-MONTBELIARD", "BELFORT45MONTBELIARD")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "BESANCON FRANCHE-COMTE", "BESANCON FRANCHE45COMTE")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "AIX-LES-BAINS - LE REVARD", "AIX45LES45BAINS 45 LE REVARD")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "Chalon-sur-Saône", "Chalon45sur45Saône")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "la-teste", "la45teste")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "LILLE EUROPE-147322", "LILLE EUROPE")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "ST AVRE - LA CHAMBRE", "ST AVRE 45 LA CHAMBRE")
tarif_tgv$OD<-str_replace(tarif_tgv$OD, pattern = "VITRY-LE-FRANÇOIS", "VITRY45LE45FRANÇOIS")
tarif_nolaval <- tarif_tgv%>%filter(str_count(tarif_tgv$OD, pattern = "-")==1)
tarif_laval <- tarif_tgv%>%filter(str_count(tarif_tgv$OD, pattern = "-")>1)
tarif_laval$OD <- str_remove(tarif_laval$OD, pattern="^[^-]{1,}")
tarif_laval$OD <- str_remove(tarif_laval$OD, pattern="^-{1}")
tarif_tgv2<-bind_rows(tarif_nolaval,tarif_laval)
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[éèêë]", "e")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÊËÈÉ]", "E")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[àâäáã]", "a")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÄÂÀÁÃ]", "A")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÏÎÌÍ]", "I")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ôöòó]", "o")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÖÔÒÓ]", "O")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ùûüú]", "u")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÜÛÚÙ]", "U")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "[ÿý]", "y")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "ç", "c")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "Ý", "Y")
tarif_tgv2$OD <- str_replace_all(tarif_tgv2$OD, pattern = "Ç", "C")
tarif_tgv2 <- tarif_tgv2%>%mutate(list = str_split(tarif_tgv2$OD, pattern="-"))
tarif_tgv2 <- tarif_tgv2%>%mutate(dep = lapply(tarif_tgv2$list, function(x) x[1]))
tarif_tgv2 <- tarif_tgv2%>%mutate(arr = lapply(tarif_tgv2$list, function(x) x[2]))
tarif_tgv2$dep<-unlist(tarif_tgv2$dep)
tarif_tgv2$arr<-unlist(tarif_tgv2$arr)
tarif_tgv2$dep<-str_replace_all(tarif_tgv2$dep, pattern="45", "-")
tarif_tgv2$arr<-str_replace_all(tarif_tgv2$arr, pattern="45", "-")
##tarif_tgv2$dep<-str_replace_all(tarif_tgv2$dep, pattern="[:digit:]", "-")
##tarif_tgv2$arr<-str_replace_all(tarif_tgv2$arr, pattern="45", "-")
tarif_tgv2$dep<-str_trim(tarif_tgv2$dep)
tarif_tgv2$arr<-str_trim(tarif_tgv2$arr)
tarif_tgv2$Prix.d.appel.2nde<-str_replace_na(tarif_tgv2$Prix.d.appel.2nde, "0")
tarif_tgv2$Prix.d.appel.2nde<-as.numeric(tarif_tgv2$Prix.d.appel.2nde)
tarif_tgv2<-tarif_tgv2%>%select(c('dep','arr','Prix.d.appel.2nde','Plein.Tarif.Loisir.2nde','X1ère.classe'))
tarif_tgv2$dep<-str_to_upper(tarif_tgv2$dep)
tarif_tgv2$arr<-str_to_upper(tarif_tgv2$arr)
tarif_tgv2$dep <- str_replace_all(tarif_tgv2$dep, pattern = " ", "_")
tarif_tgv2$dep <- str_replace_all(tarif_tgv2$dep, pattern = "-", "_")
tarif_tgv2$dep <- str_replace_all(tarif_tgv2$dep, pattern = "[:digit:]", "_")
tarif_tgv2$arr <- str_replace_all(tarif_tgv2$arr, pattern = " ", "_")
tarif_tgv2$arr <- str_replace_all(tarif_tgv2$arr, pattern = "-", "_")
tarif_tgv2$arr <- str_replace_all(tarif_tgv2$arr, pattern = "[:digit:]", "_")
tarif_tgv2$dep <- str_remove_all(tarif_tgv2$dep, pattern = "_")
tarif_tgv2$arr <- str_remove_all(tarif_tgv2$arr, pattern = "_")
View(full_join)
full_join <- NA
for(i in sequence(18399)){
full_table[i,]$stop_proche = full_table[i+1,]$stop_name
}
full_table%>%filter((stop_name==tarif_tgv2$dep) && (stop_proche==tarif_tgv2$arr))
k=0
j=0
i=0
for(i in sequence(18399)){
for(j in sequence(4161)){
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep && full_table[i,]$stop_proche==tarif_tgv2[j,]$arr )
k++
}
}
{k++}
k=0
j=0
i=0
for(i in sequence(18399)){
for(j in sequence(4161)){
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep && full_table[i,]$stop_proche==tarif_tgv2[j,]$arr )
{k++}
}
}
k=0
j=0
i=0
for(i in sequence(18399)){
for(j in sequence(4161)){
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep && full_table[i,]$stop_proche==tarif_tgv2[j,]$arr )
{k++}
}
}
k=0
j=0
i=0
for(i in sequence(18399)){
for(j in sequence(4161)){
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep && full_table[i,]$stop_proche==tarif_tgv2[j,]$arr )
k++
}
}
k=0
j=0
i=0
for(i in sequence(18399))
for(j in sequence(4161))
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep && full_table[i,]$stop_proche==tarif_tgv2[j,]$arr )
k++
k=0
j=0
i=0
for(i in sequence(18399)){
for(j in sequence(4161)){
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep && full_table[i,]$stop_proche==tarif_tgv2[j,]$arr )
{k=k+1}
}
}
k=0
j=0
i=0
for(i in sequence(18399)){
for(j in sequence(4161)){
if(full_table[i,]$stop_name==tarif_tgv2[j,]$dep)
{ if(full_table[i,]$stop_proche==tarif_tgv2[j,]$arr)
{k=k+1}
}
else if(full_table[i,]$stop_name==tarif_tgv2[j,]$arr)
{ if(full_table[i,]$stop_proche==tarif_tgv2[j,]$dep)
{k=k+1}
}
}
}
tgv_calendar <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/calendar.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_stops <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/stops.txt", header=TRUE, sep=",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
tgv_stoptime <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/stop_times.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_trips <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/trips.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_stops <- tgv_stops %>% select(c('stop_id', 'stop_name', 'parent_station'))
tgv_stoptime <- tgv_stoptime %>% select(c('trip_id','arrival_time','departure_time','stop_id','stop_sequence'))
tgv_trips <- tgv_trips %>% select(c('trip_id','service_id','trip_headsign'))
tgv_stops_time <- left_join(tgv_stoptime,tgv_stops, by="stop_id")
tgv_stops_time_trips <- left_join(tgv_stops_time,tgv_trips, by="trip_id")
tgv_stops_time_trips_calend <- left_join(tgv_stops_time_trips, tgv_calendar, by="service_id")
##tgv_stops_time_trips_calend <- tgv_stops_time_trips_calend %>% filter(!is.na(monday) && !is.na(tuesday) && !is.na(wednesday) && !is.na(thursday) && !is.na(friday) && !is.na(saturday) && !is.na(sunday))
full_table <- tgv_stops_time_trips_calend %>% filter(!is.na(monday))
full_table$stop_name <- str_remove_all(full_table$stop_name, pattern = "Gare de ")
full_table <- full_table %>% filter(stop_name != "")
tgv_calendar <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/calendar.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_stops <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/stops.txt", header=TRUE, sep=",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
tgv_stoptime <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/stop_times.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_trips <- read.csv("C:/Users/pariz/Documents/M2 MIMO/Langage C/SNCF/reservation-main/data_sncf/export_gtfs_voyages/trips.txt", header=TRUE, sep=",", stringsAsFactors = FALSE)
tgv_stops <- tgv_stops %>% select(c('stop_id', 'stop_name', 'parent_station'))
tgv_stoptime <- tgv_stoptime %>% select(c('trip_id','arrival_time','departure_time','stop_id','stop_sequence'))
tgv_trips <- tgv_trips %>% select(c('trip_id','service_id','trip_headsign'))
tgv_stops_time <- left_join(tgv_stoptime,tgv_stops, by="stop_id")
tgv_stops_time_trips <- left_join(tgv_stops_time,tgv_trips, by="trip_id")
tgv_stops_time_trips_calend <- left_join(tgv_stops_time_trips, tgv_calendar, by="service_id")
##tgv_stops_time_trips_calend <- tgv_stops_time_trips_calend %>% filter(!is.na(monday) && !is.na(tuesday) && !is.na(wednesday) && !is.na(thursday) && !is.na(friday) && !is.na(saturday) && !is.na(sunday))
full_table <- tgv_stops_time_trips_calend %>% filter(!is.na(monday))
full_table$stop_name <- str_remove_all(full_table$stop_name, pattern = "Gare de ")
full_table <- full_table %>% filter(stop_name != "")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[éèêë]", "e")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÊËÈÉ]", "E")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[àâäáã]", "a")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÄÂÀÁÃ]", "A")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÏÎÌÍ]", "I")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ôöòó]", "o")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÖÔÒÓ]", "O")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ùûüú]", "u")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÜÛÚÙ]", "U")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÿý]", "y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "ç", "c")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ý", "Y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ç", "C")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[éèêë]", "e")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÊËÈÉ]", "E")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[àâäáã]", "a")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÄÂÀÁÃ]", "A")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÏÎÌÍ]", "I")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ôöòó]", "o")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÖÔÒÓ]", "O")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ùûüú]", "u")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÜÛÚÙ]", "U")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "[ÿý]", "y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "ç", "c")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ý", "Y")
full_table$stop_name <- str_replace_all(full_table$stop_name, pattern = "Ç", "C")
full_table$stop_name<-str_to_upper(full_table$stop_name)
write.table(full_table,"horaire_tgv.csv", sep=";", quote=FALSE, row.names = FALSE ,col.names = FALSE)
full_table <- full_table %>% mutate(type = case_when( str_detect(full_table$stop_id, pattern="Car TER-") ~ "Car",
str_detect(full_table$stop_id, pattern="Tramtrain-") ~ "Tram",
str_detect(full_table$stop_id, pattern="Train TER-") ~ "TER",
str_detect(full_table$stop_id, pattern="Navette-") ~ "Navette",
str_detect(full_table$stop_id, pattern="TGV-") ~ "TGV",
str_detect(full_table$stop_id, pattern="TGV INOUI-") ~ "INOUI",
str_detect(full_table$stop_id, pattern="OUIGO-") ~ "OUIGO"))
full_table <- full_table %>% select(c('new_id','arrival_time', 'departure_time', 'stop_sequence','trip_headsign','true_monday','true_tuesday','true_wednesday','true_thursday','true_friday','true_saturday','true_sunday','capacite_max','type','stop_name'))
## Suppression de l'excedant ":" et ":00" dans les horaires
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":00$")
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":00$")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":")
trip_id_full <- full_table %>% distinct(trip_id)
trip_id_full <- trip_id_full %>% mutate(new_id= 0)
i<-0
for(i in sequence(31321)){
trip_id_full[i,]$new_id <- i
}
full_table <- left_join(full_table, trip_id_full, by="trip_id")
full_table <- full_table %>% select(c('new_id','arrival_time', 'departure_time', 'stop_sequence','trip_headsign','true_monday','true_tuesday','true_wednesday','true_thursday','true_friday','true_saturday','true_sunday','capacite_max','type','stop_name'))
## Suppression de l'excedant ":" et ":00" dans les horaires
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":00$")
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":00$")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":")
trip_id_full <- full_table %>% distinct(trip_id)
trip_id_full <- trip_id_full %>% mutate(new_id= 0)
i<-0
for(i in sequence(31321)){
trip_id_full[i,]$new_id <- i
}
full_table <- left_join(full_table, trip_id_full, by="trip_id")
full_table <- full_table %>% select(c('new_id','arrival_time', 'departure_time', 'stop_sequence','trip_headsign','true_monday','true_tuesday','true_wednesday','true_thursday','true_friday','true_saturday','true_sunday','capacite_max','type','stop_name'))
## Suppression de l'excedant ":" et ":00" dans les horaires
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":00$")
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":00$")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":")
full_table <- full_table %>% mutate(capacite_max =case_when( str_detect(full_table$type, pattern="Car") ~ 63,
str_detect(full_table$type, pattern="Tram") ~ 200,
str_detect(full_table$type, pattern="TER") ~ 300,
str_detect(full_table$type, pattern="Navette") ~ 100,
str_detect(full_table$type, pattern="TGV") ~ 1400,
str_detect(full_table$type, pattern="INOUI") ~ 1400,
str_detect(full_table$type, pattern="OUIGO") ~ 1400))
full_table <- full_table %>% select(c('new_id.x','arrival_time', 'departure_time', 'stop_sequence','trip_headsign','monday','tuesday','wednesday','thursday','friday','saturday','sunday','capacite_max','type','stop_name'))
## Suppression de l'excedant ":" et ":00" dans les horaires
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":00$")
full_table$arrival_time <- str_remove_all(full_table$arrival_time, pattern = ":")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":00$")
full_table$departure_time <- str_remove_all(full_table$departure_time, pattern = ":")
write.table(full_table,"horaire_tgv.csv", sep=";", quote=FALSE, row.names = FALSE ,col.names = FALSE)
write.table(full_table,"horaire_tgv_header.csv", sep=";", quote=FALSE, row.names = FALSE ,col.names = TRUE)
write.table(tarif_tgv2,"tarif_tgv_header.csv", sep=";", quote=FALSE, row.names = FALSE ,col.names = TRUE)
